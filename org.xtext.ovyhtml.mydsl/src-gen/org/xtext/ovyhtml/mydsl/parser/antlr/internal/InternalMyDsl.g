/*
 * generated by Xtext 2.35.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.ovyhtml.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.ovyhtml.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.ovyhtml.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "HTML";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleHTML
entryRuleHTML returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHTMLRule()); }
	iv_ruleHTML=ruleHTML
	{ $current=$iv_ruleHTML.current; }
	EOF;

// Rule HTML
ruleHTML returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='HTML'
		{
			newLeafNode(otherlv_0, grammarAccess.getHTMLAccess().getHTMLKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getHTMLAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='balise'
		{
			newLeafNode(otherlv_2, grammarAccess.getHTMLAccess().getBaliseKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getHTMLAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getHTMLAccess().getBaliseBaliseParserRuleCall_4_0());
				}
				lv_balise_4_0=ruleBalise
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHTMLRule());
					}
					add(
						$current,
						"balise",
						lv_balise_4_0,
						"org.xtext.ovyhtml.mydsl.MyDsl.Balise");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getHTMLAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getHTMLAccess().getBaliseBaliseParserRuleCall_5_1_0());
					}
					lv_balise_6_0=ruleBalise
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getHTMLRule());
						}
						add(
							$current,
							"balise",
							lv_balise_6_0,
							"org.xtext.ovyhtml.mydsl.MyDsl.Balise");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getHTMLAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getHTMLAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleBalise
entryRuleBalise returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBaliseRule()); }
	iv_ruleBalise=ruleBalise
	{ $current=$iv_ruleBalise.current; }
	EOF;

// Rule Balise
ruleBalise returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBaliseAccess().getBaliseAction_0(),
					$current);
			}
		)
		otherlv_1='Balise'
		{
			newLeafNode(otherlv_1, grammarAccess.getBaliseAccess().getBaliseKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getBaliseAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='nom'
			{
				newLeafNode(otherlv_3, grammarAccess.getBaliseAccess().getNomKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getBaliseAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBaliseAccess().getNomBalise_TypeEnumRuleCall_3_2_0());
					}
					lv_nom_5_0=ruleBalise_Type
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBaliseRule());
						}
						add(
							$current,
							"nom",
							lv_nom_5_0,
							"org.xtext.ovyhtml.mydsl.MyDsl.Balise_Type");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getBaliseAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBaliseAccess().getNomBalise_TypeEnumRuleCall_3_3_1_0());
						}
						lv_nom_7_0=ruleBalise_Type
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBaliseRule());
							}
							add(
								$current,
								"nom",
								lv_nom_7_0,
								"org.xtext.ovyhtml.mydsl.MyDsl.Balise_Type");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getBaliseAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
		(
			otherlv_9='balise'
			{
				newLeafNode(otherlv_9, grammarAccess.getBaliseAccess().getBaliseKeyword_4_0());
			}
			otherlv_10='{'
			{
				newLeafNode(otherlv_10, grammarAccess.getBaliseAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBaliseAccess().getBaliseBaliseParserRuleCall_4_2_0());
					}
					lv_balise_11_0=ruleBalise
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBaliseRule());
						}
						add(
							$current,
							"balise",
							lv_balise_11_0,
							"org.xtext.ovyhtml.mydsl.MyDsl.Balise");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getBaliseAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBaliseAccess().getBaliseBaliseParserRuleCall_4_3_1_0());
						}
						lv_balise_13_0=ruleBalise
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBaliseRule());
							}
							add(
								$current,
								"balise",
								lv_balise_13_0,
								"org.xtext.ovyhtml.mydsl.MyDsl.Balise");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getBaliseAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		(
			otherlv_15='attribut'
			{
				newLeafNode(otherlv_15, grammarAccess.getBaliseAccess().getAttributKeyword_5_0());
			}
			otherlv_16='{'
			{
				newLeafNode(otherlv_16, grammarAccess.getBaliseAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBaliseAccess().getAttributAttributParserRuleCall_5_2_0());
					}
					lv_attribut_17_0=ruleAttribut
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBaliseRule());
						}
						add(
							$current,
							"attribut",
							lv_attribut_17_0,
							"org.xtext.ovyhtml.mydsl.MyDsl.Attribut");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_18=','
				{
					newLeafNode(otherlv_18, grammarAccess.getBaliseAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBaliseAccess().getAttributAttributParserRuleCall_5_3_1_0());
						}
						lv_attribut_19_0=ruleAttribut
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBaliseRule());
							}
							add(
								$current,
								"attribut",
								lv_attribut_19_0,
								"org.xtext.ovyhtml.mydsl.MyDsl.Attribut");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_20='}'
			{
				newLeafNode(otherlv_20, grammarAccess.getBaliseAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		otherlv_21='}'
		{
			newLeafNode(otherlv_21, grammarAccess.getBaliseAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleAttribut
entryRuleAttribut returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributRule()); }
	iv_ruleAttribut=ruleAttribut
	{ $current=$iv_ruleAttribut.current; }
	EOF;

// Rule Attribut
ruleAttribut returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAttributAccess().getAttributAction_0(),
					$current);
			}
		)
		otherlv_1='Attribut'
		{
			newLeafNode(otherlv_1, grammarAccess.getAttributAccess().getAttributKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getAttributAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='nom_attr'
			{
				newLeafNode(otherlv_3, grammarAccess.getAttributAccess().getNom_attrKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getAttributAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAttributAccess().getNom_attrAttr_TypeEnumRuleCall_3_2_0());
					}
					lv_nom_attr_5_0=ruleAttr_Type
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributRule());
						}
						add(
							$current,
							"nom_attr",
							lv_nom_attr_5_0,
							"org.xtext.ovyhtml.mydsl.MyDsl.Attr_Type");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getAttributAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAttributAccess().getNom_attrAttr_TypeEnumRuleCall_3_3_1_0());
						}
						lv_nom_attr_7_0=ruleAttr_Type
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAttributRule());
							}
							add(
								$current,
								"nom_attr",
								lv_nom_attr_7_0,
								"org.xtext.ovyhtml.mydsl.MyDsl.Attr_Type");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getAttributAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
		(
			otherlv_9='contenu'
			{
				newLeafNode(otherlv_9, grammarAccess.getAttributAccess().getContenuKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAttributAccess().getContenuEStringParserRuleCall_4_1_0());
					}
					lv_contenu_10_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributRule());
						}
						set(
							$current,
							"contenu",
							lv_contenu_10_0,
							"org.xtext.ovyhtml.mydsl.MyDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getAttributAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Rule Balise_Type
ruleBalise_Type returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Titre'
			{
				$current = grammarAccess.getBalise_TypeAccess().getTitreEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getBalise_TypeAccess().getTitreEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='H1'
			{
				$current = grammarAccess.getBalise_TypeAccess().getH1EnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getBalise_TypeAccess().getH1EnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='H2'
			{
				$current = grammarAccess.getBalise_TypeAccess().getH2EnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getBalise_TypeAccess().getH2EnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='H3'
			{
				$current = grammarAccess.getBalise_TypeAccess().getH3EnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getBalise_TypeAccess().getH3EnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='H4'
			{
				$current = grammarAccess.getBalise_TypeAccess().getH4EnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getBalise_TypeAccess().getH4EnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='P'
			{
				$current = grammarAccess.getBalise_TypeAccess().getPEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getBalise_TypeAccess().getPEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='span'
			{
				$current = grammarAccess.getBalise_TypeAccess().getSpanEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getBalise_TypeAccess().getSpanEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='div'
			{
				$current = grammarAccess.getBalise_TypeAccess().getDivEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getBalise_TypeAccess().getDivEnumLiteralDeclaration_7());
			}
		)
	)
;

// Rule Attr_Type
ruleAttr_Type returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='class'
			{
				$current = grammarAccess.getAttr_TypeAccess().getClassEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getAttr_TypeAccess().getClassEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='id'
			{
				$current = grammarAccess.getAttr_TypeAccess().getIdEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getAttr_TypeAccess().getIdEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='src'
			{
				$current = grammarAccess.getAttr_TypeAccess().getSrcEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getAttr_TypeAccess().getSrcEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='href'
			{
				$current = grammarAccess.getAttr_TypeAccess().getHrefEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getAttr_TypeAccess().getHrefEnumLiteralDeclaration_3());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;

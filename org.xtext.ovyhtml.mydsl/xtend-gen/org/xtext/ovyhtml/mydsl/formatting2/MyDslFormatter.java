/**
 * generated by Xtext 2.35.0
 */
package org.xtext.ovyhtml.mydsl.formatting2;

import com.google.inject.Inject;
import goupxm2thtml.goupdix.Attribut;
import goupxm2thtml.goupdix.Balise;
import goupxm2thtml.goupdix.HTML;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;
import org.xtext.ovyhtml.mydsl.services.MyDslGrammarAccess;

@SuppressWarnings("all")
public class MyDslFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private MyDslGrammarAccess _myDslGrammarAccess;

  protected void _format(final HTML hTML, @Extension final IFormattableDocument document) {
    EList<Balise> _balise = hTML.getBalise();
    for (final Balise balise : _balise) {
      document.<Balise>format(balise);
    }
  }

  protected void _format(final Balise balise, @Extension final IFormattableDocument document) {
    EList<Balise> _balise = balise.getBalise();
    for (final Balise _balise_1 : _balise) {
      document.<Balise>format(_balise_1);
    }
    EList<Attribut> _attribut = balise.getAttribut();
    for (final Attribut attribut : _attribut) {
      document.<Attribut>format(attribut);
    }
  }

  public void format(final Object balise, final IFormattableDocument document) {
    if (balise instanceof XtextResource) {
      _format((XtextResource)balise, document);
      return;
    } else if (balise instanceof Balise) {
      _format((Balise)balise, document);
      return;
    } else if (balise instanceof HTML) {
      _format((HTML)balise, document);
      return;
    } else if (balise instanceof EObject) {
      _format((EObject)balise, document);
      return;
    } else if (balise == null) {
      _format((Void)null, document);
      return;
    } else if (balise != null) {
      _format(balise, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(balise, document).toString());
    }
  }
}
